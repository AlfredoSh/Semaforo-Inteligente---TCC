# Conectando ao Google Drive:
# Verificar se NVIDIA GPU está ativada
!nvidia-smi

from google.colab import drive
drive.mount('/content/gdrive')
!ln -s /content/gdrive/My\ Drive/ /mydrive
!ls /mydrive

# Clone da DarkNet no Github:
!git clone https://github.com/AlexeyAB/darknet

# Compilar Daknet usando GPU da Nvidia:
# Altere o makefile para ter GPU e OPENCV ativados
%cd darknet
!sed -i 's/OPENCV=0/OPENCV=1/' Makefile
!sed -i 's/GPU=0/GPU=1/' Makefile
!sed -i 's/CUDNN=0/CUDNN=1/' Makefile
!make

# Configurando a rede Darknet para treinar YOLO V3
!cp cfg/yolov3.cfg cfg/yolov3_training.cfg

!sed -i 's/batch=1/batch=64/' cfg/yolov3_training.cfg
!sed -i 's/subdivisions=1/subdivisions=16/' cfg/yolov3_training.cfg
!sed -i 's/max_batches = 500200/max_batches = 4000/' cfg/yolov3_training.cfg
!sed -i '610 s@classes=80@classes=1@' cfg/yolov3_training.cfg
!sed -i '696 s@classes=80@classes=1@' cfg/yolov3_training.cfg
!sed -i '783 s@classes=80@classes=1@' cfg/yolov3_training.cfg
!sed -i '603 s@filters=255@filters=18@' cfg/yolov3_training.cfg
!sed -i '689 s@filters=255@filters=18@' cfg/yolov3_training.cfg
!sed -i '776 s@filters=255@filters=18@' cfg/yolov3_training.cfg
 
# Criando pasta no google drive para que possamos salvar os pesos
!mkdir "/mydrive/yolov3"
!echo "Cadeirante" > data/obj.names
!echo -e 'classes= 1\ntrain  = data/train.txt\nvalid  = data/test.txt\nnames = data/obj.names\nbackup = /mydrive/yolov3' > data/obj.data
!mkdir data/obj
 
# Baixar pesos modelo da darknet
!wget https://pjreddie.com/media/files/darknet53.conv.74
 
# Extrair Imagens
#As imagens precisam estar dentro de um arquivo zip chamado "images.zip" e precisam estar dentro da pasta "yolov3" no Google Drive
!unzip /mydrive/yolov3/images.zip -d data/obj

# Converter o índice de classe nos arquivos .txt.
# Se o índice for diferente de 0, vamos alterá-lo.
import glob
import os
import re
 
txt_file_paths = glob.glob(r"data/obj/*.txt")
for i, file_path in enumerate(txt_file_paths):
    # Obter o tamanho da imagem
    with open(file_path, "r") as f_o:
        lines = f_o.readlines()
 
        text_converted = []
        for line in lines:
            print(line)
            numbers = re.findall("[0-9.]+", line)
            print(numbers)
            if numbers:
 
                # Define coordenadas
                text = "{} {} {} {} {}".format(0, numbers[1], numbers[2], numbers[3], numbers[4])
                text_converted.append(text)
                print(i, file_path)
                print(text)
        # Gravar arquivo
        with open(file_path, 'w') as fp:
            for item in text_converted:
                fp.writelines("%s\n" % item)

import glob
images_list = glob.glob("data/obj/*.jpg")
print(images_list)

#Criar arquivo training.txt 
file = open("data/train.txt", "w") 
file.write("\n".join(images_list)) 
file.close() 
# Iniciando o treinamento
!./darknet detector train data/obj.data cfg/yolov3_training.cfg darknet53.conv.74 -dont_show
